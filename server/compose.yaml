networks:
  proxy:
    external: true

services:
  ##############################################################################
  # Proxy configuration                                                        #
  ##############################################################################
  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy
    environment:
      CONTAINERS: 1

  ##############################################################################
  # Edge Router configuration                                                  #
  ##############################################################################
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    depends_on:
      - authelia
      - socket-proxy
    volumes:
      - ./acme.json:/acme.json
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.dashboard.entrypoints=websecure
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.middlewares=authelia@docker
    command:
      ##########################################################################
      # Traefik - Global configuration                                         #
      ##########################################################################
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --api.dashboard=true
      - --log.level=DEBUG
      ##########################################################################
      # Traefik - EntryPoints configuration                                    #
      ##########################################################################
      - --entryPoints.web.address=:80
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.web.http.redirections.entryPoint.permanent=true
      - --entryPoints.websecure.address=:443
      - --entryPoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${DOMAIN}
      ##########################################################################
      # Traefik - Let's Encrypt configuration                                  #
      ##########################################################################
      - --certificatesResolvers.letsencrypt.acme.storage=acme.json
      - --certificatesResolvers.letsencrypt.acme.caServer=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesResolvers.letsencrypt.acme.dnsChallenge.provider=cloudflare
      ##########################################################################
      # Traefik - Docker configuration backend                                 #
      ##########################################################################
      - --providers.docker.exposedByDefault=false
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.defaultRule=Host(`{{ first (splitList "-" (normalize .Name)) }}.${DOMAIN}`)
    environment:
      CF_API_EMAIL: ${CF_API_EMAIL}
      CF_API_KEY: ${CF_API_KEY}
    ports:
      - 80:80
      - 443:443

  ##############################################################################
  # Authentication configuration                                               #
  ##############################################################################
  authelia:
    image: authelia/authelia
    container_name: authelia
    restart: unless-stopped
    volumes:
      - ./authelia.yaml:/config/configuration.yml
      - ./users.yaml:/config/users.yaml
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.authelia.entrypoints=websecure
      - traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://authelia.${DOMAIN}
      - traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email
    environment:
      AUTHELIA_JWT_SECRET: ${AUTHELIA_JWT_SECRET}
      AUTHELIA_DEFAULT_REDIRECTION_URL: https://${DOMAIN}
      AUTHELIA_SESSION_SECRET: ${AUTHELIA_SESSION_SECRET}
      AUTHELIA_SESSION_DOMAIN: ${DOMAIN}
      AUTHELIA_STORAGE_ENCRYPTION_KEY: ${AUTHELIA_STORAGE_ENCRYPTION_KEY}
      TZ: Europe/Paris
    expose:
      - 9091
    healthcheck:
      disable: true

  ##############################################################################
  # NoSQL database configuration                                               #
  ##############################################################################
  mongo:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    volumes:
      - ./mongodb:/data/db
    networks:
      - proxy
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - 27017:27017

  mongodb:
    image: mongo-express
    container_name: mongodb
    restart: unless-stopped
    depends_on:
      - mongo
      - authelia
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.mongodb.entrypoints=websecure
      - traefik.http.routers.mongodb.middlewares=authelia@docker
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}
    expose:
      - 8081

  ##############################################################################
  # SQL database configuration                                                 #
  ##############################################################################
  mariadb:
    image: mariadb
    container_name: mariadb
    restart: unless-stopped
    volumes:
      - ./mariadb:/var/lib/mysql
    networks:
      - proxy
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_PASSWORD}
    ports:
      - 3306:3306

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    depends_on:
      - mariadb
      - authelia
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.phpmyadmin.entrypoints=websecure
      - traefik.http.routers.phpmyadmin.middlewares=authelia@docker
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: ${MARIADB_PASSWORD}
    expose:
      - 8080